
package Customer;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Anar
 */
public class CustomerMain extends javax.swing.JFrame {

    /**
     * Creates new form CustomerMain
     */
    Database db;
    int id;
    Customer customer = null;
    public CustomerMain(Database db, int id) {
        initComponents();
        this.db = db;
        this.id = id;
        customerFill();
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fnameLabel = new javax.swing.JLabel();
        lnameLabel = new javax.swing.JLabel();
        bdateLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        phonenumberLabel = new javax.swing.JLabel();
        mailLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        updatePersonalButton = new javax.swing.JButton();
        reservationPanelButton = new javax.swing.JButton();
        activityPanelButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        myActivitesButton = new javax.swing.JButton();
        DynamicPanel = new javax.swing.JPanel();
        updatePersonalPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        updateidField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        updateDatePicker = new org.jdesktop.swingx.JXDatePicker();
        updatefnameField = new javax.swing.JTextField();
        updatelnameField = new javax.swing.JTextField();
        updatemailField = new javax.swing.JTextField();
        updatephoneField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        updateStatusLabel = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        currentpasswordField = new javax.swing.JPasswordField();
        jLabel26 = new javax.swing.JLabel();
        newpasswordField = new javax.swing.JPasswordField();
        jLabel27 = new javax.swing.JLabel();
        confirmnewpasswordField = new javax.swing.JPasswordField();
        jLabel28 = new javax.swing.JLabel();
        updatePasswordButton = new javax.swing.JButton();
        reservationPanel = new javax.swing.JPanel();
        roomtypeLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dailypriceLabel = new javax.swing.JLabel();
        maxguestsLabel = new javax.swing.JLabel();
        totalroomsLabel = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        roomnumberLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        emptyRoomList = new javax.swing.JList();
        jLabel13 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jXDatePicker2 = new org.jdesktop.swingx.JXDatePicker();
        requestRoomButton = new javax.swing.JButton();
        reservationStatusLabel = new javax.swing.JLabel();
        myReservationPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestedRoomsList = new javax.swing.JList();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        reservedRoomsList = new javax.swing.JList();
        jLabel23 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        myActivitiesPanel = new javax.swing.JTabbedPane();
        requestedActivitesPanel = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        requestedActivitiesList = new javax.swing.JList();
        jLabel36 = new javax.swing.JLabel();
        CancelRequestButton = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        reservedActivitesPanel = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        reservedActivitiesList = new javax.swing.JList();
        activityPanel = new javax.swing.JPanel();
        activitynameLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        activitiesList = new javax.swing.JList();
        activitystarttimeLabel = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        activityendtimeLabel = new javax.swing.JLabel();
        totalroomsLabel1 = new javax.swing.JLabel();
        branchCmb = new javax.swing.JComboBox();
        jLabel33 = new javax.swing.JLabel();
        requestRoomButton1 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        activityStatusLabel = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        activityinfoLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "PROFILE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        fnameLabel.setText("First Name : ");

        lnameLabel.setText("Last Name : ");

        bdateLabel.setText("Birthdate : ");

        idLabel.setText("ID : ");

        phonenumberLabel.setText("Phone Number :");

        mailLabel.setText("Mail Address : ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idLabel)
                    .addComponent(fnameLabel)
                    .addComponent(bdateLabel)
                    .addComponent(lnameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(phonenumberLabel)
                    .addComponent(mailLabel))
                .addGap(244, 244, 244))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(idLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fnameLabel)
                .addGap(17, 17, 17)
                .addComponent(lnameLabel)
                .addGap(18, 18, 18)
                .addComponent(bdateLabel)
                .addGap(7, 7, 7))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(mailLabel)
                .addGap(29, 29, 29)
                .addComponent(phonenumberLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "MENU", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        updatePersonalButton.setText("UPDATE PROFILE");
        updatePersonalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePersonalButtonActionPerformed(evt);
            }
        });

        reservationPanelButton.setText("RESERVATION");
        reservationPanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationPanelButtonActionPerformed(evt);
            }
        });

        activityPanelButton.setText("ACTIVITIES");
        activityPanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activityPanelButtonActionPerformed(evt);
            }
        });

        jButton1.setText("MY RESERVATIONS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        myActivitesButton.setText("MY ACTIVITIES");
        myActivitesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myActivitesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updatePersonalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reservationPanelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(activityPanelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(myActivitesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updatePersonalButton)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reservationPanelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(activityPanelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(myActivitesButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DynamicPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "MYPANEL", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        DynamicPanel.setLayout(new java.awt.CardLayout());

        jLabel1.setText("ID");

        updateidField.setEditable(false);

        jLabel2.setText("First Name : ");

        jLabel3.setText("Last Name : ");

        jLabel4.setText("Mail Address : ");

        jLabel5.setText("Phone Number :");

        jLabel6.setText("Birthdate : ");

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        updateStatusLabel.setText("Status");

        jLabel25.setText("Current Password");

        jLabel26.setText("New Password");

        jLabel27.setText("Repeat New Password");

        jLabel28.setText("Update Password");

        updatePasswordButton.setText("Update Password");
        updatePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePasswordButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updatePersonalPanelLayout = new javax.swing.GroupLayout(updatePersonalPanel);
        updatePersonalPanel.setLayout(updatePersonalPanelLayout);
        updatePersonalPanelLayout.setHorizontalGroup(
            updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(38, 38, 38)
                        .addComponent(updatephoneField))
                    .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                        .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(45, 45, 45)
                        .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updatemailField)
                            .addComponent(updatelnameField)
                            .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(updateButton)
                                .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(updateDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(updateidField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(updatefnameField))))))
                .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatePersonalPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28)
                        .addGap(143, 143, 143))
                    .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(updatePasswordButton)
                            .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                                .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatePersonalPanelLayout.createSequentialGroup()
                                        .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel25)
                                            .addComponent(jLabel26))
                                        .addGap(22, 22, 22))
                                    .addComponent(jLabel27))
                                .addGap(38, 38, 38)
                                .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(newpasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .addComponent(currentpasswordField)
                                    .addComponent(confirmnewpasswordField))))
                        .addGap(48, 48, 48))))
            .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                .addGap(258, 258, 258)
                .addComponent(updateStatusLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        updatePersonalPanelLayout.setVerticalGroup(
            updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(updateidField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel28)))
                .addGap(23, 23, 23)
                .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel26)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel27)
                        .addGap(31, 31, 31)
                        .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(updatephoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(updatePasswordButton))))
                    .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                        .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(updatefnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(currentpasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(updatelnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newpasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(updatemailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(updatePersonalPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(confirmnewpasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(12, 12, 12)
                .addGroup(updatePersonalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(updateDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(updateButton)
                .addGap(18, 18, 18)
                .addComponent(updateStatusLabel)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        DynamicPanel.add(updatePersonalPanel, "card2");

        roomtypeLabel.setText("Room Type : ");

        jLabel10.setText("Empty Rooms List In the Branch");

        dailypriceLabel.setText("Daily Price : ");

        maxguestsLabel.setText("Max Guests : ");

        totalroomsLabel.setText("Total Rooms : ");

        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel7.setText("Hotel Name : ");

        jLabel8.setText("Hotel Location : ");

        jLabel12.setText("Room Properties");

        roomnumberLabel.setText("Room Number : ");

        emptyRoomList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        emptyRoomList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                emptyRoomListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(emptyRoomList);

        jLabel13.setText("Branch ID");

        jLabel9.setText("Arrival Date : ");

        jLabel14.setText("Departure Date : ");

        requestRoomButton.setText("Request Room");
        requestRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestRoomButtonActionPerformed(evt);
            }
        });

        reservationStatusLabel.setText("Status");

        javax.swing.GroupLayout reservationPanelLayout = new javax.swing.GroupLayout(reservationPanel);
        reservationPanel.setLayout(reservationPanelLayout);
        reservationPanelLayout.setHorizontalGroup(
            reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservationPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(reservationPanelLayout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel12))
                            .addComponent(roomnumberLabel)
                            .addComponent(roomtypeLabel)
                            .addComponent(maxguestsLabel)
                            .addComponent(dailypriceLabel)
                            .addComponent(totalroomsLabel)
                            .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(reservationPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel14)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(reservationPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(51, 51, 51)
                                    .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(requestRoomButton)))
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(reservationStatusLabel)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        reservationPanelLayout.setVerticalGroup(
            reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservationPanelLayout.createSequentialGroup()
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reservationPanelLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel12)
                        .addGap(35, 35, 35)
                        .addComponent(roomnumberLabel)
                        .addGap(27, 27, 27)
                        .addComponent(roomtypeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(maxguestsLabel)
                        .addGap(18, 18, 18)
                        .addComponent(totalroomsLabel)
                        .addGap(18, 18, 18)
                        .addComponent(dailypriceLabel)
                        .addGap(30, 30, 30)
                        .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jXDatePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addComponent(requestRoomButton)
                        .addGap(32, 32, 32)
                        .addComponent(reservationStatusLabel)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        DynamicPanel.add(reservationPanel, "card3");

        jLabel15.setText("Requested Rooms");

        requestedRoomsList.setToolTipText("You can double click to cancel Request\n");
        requestedRoomsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestedRoomsListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(requestedRoomsList);

        jLabel16.setText("Room Number : ");

        jLabel17.setText("Branch Name : ");

        jLabel18.setText("Arrival Date : ");

        jLabel19.setText("Departure Date : ");

        jLabel20.setText("Daily Price : ");

        jLabel21.setText("Total Price : ");

        jLabel22.setText("Reserved Rooms");

        reservedRoomsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reservedRoomsListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(reservedRoomsList);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("Request Details");

        jButton2.setText("Cancel Request");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel24.setText("Status");

        javax.swing.GroupLayout myReservationPanelLayout = new javax.swing.GroupLayout(myReservationPanel);
        myReservationPanel.setLayout(myReservationPanelLayout);
        myReservationPanelLayout.setHorizontalGroup(
            myReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myReservationPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(myReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myReservationPanelLayout.createSequentialGroup()
                        .addGroup(myReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(myReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(jLabel22)
                            .addComponent(jButton2))
                        .addGroup(myReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(myReservationPanelLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(myReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21)))
                            .addGroup(myReservationPanelLayout.createSequentialGroup()
                                .addGap(127, 127, 127)
                                .addComponent(jLabel24)))
                        .addContainerGap(272, Short.MAX_VALUE))
                    .addGroup(myReservationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 199, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addGap(218, 218, 218))))
        );
        myReservationPanelLayout.setVerticalGroup(
            myReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myReservationPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(myReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel23))
                .addGroup(myReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myReservationPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21))
                    .addGroup(myReservationPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addGap(33, 33, 33)
                .addComponent(jLabel22)
                .addGroup(myReservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myReservationPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel24))
                    .addGroup(myReservationPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        DynamicPanel.add(myReservationPanel, "card5");

        myActivitiesPanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                myActivitiesPanelFocusGained(evt);
            }
        });

        jLabel32.setText("Requested Activities");

        requestedActivitiesList.setToolTipText("You can double click to cancel Request\n");
        requestedActivitiesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                requestedActivitiesListValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(requestedActivitiesList);

        jLabel36.setText("Request Details");

        CancelRequestButton.setText("Cancel Request");
        CancelRequestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelRequestButtonActionPerformed(evt);
            }
        });

        jLabel37.setText("Activity Name :  ");

        jLabel38.setText("Status");

        jLabel39.setText("Info : ");

        jLabel40.setText("Start Date : ");

        jLabel41.setText("End Date : ");

        javax.swing.GroupLayout requestedActivitesPanelLayout = new javax.swing.GroupLayout(requestedActivitesPanel);
        requestedActivitesPanel.setLayout(requestedActivitesPanelLayout);
        requestedActivitesPanelLayout.setHorizontalGroup(
            requestedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(requestedActivitesPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(requestedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(requestedActivitesPanelLayout.createSequentialGroup()
                        .addComponent(CancelRequestButton)
                        .addGap(209, 209, 209)
                        .addComponent(jLabel38)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(requestedActivitesPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addGroup(requestedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel39)
                            .addComponent(jLabel40)
                            .addComponent(jLabel41))
                        .addContainerGap(299, Short.MAX_VALUE))
                    .addGroup(requestedActivitesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 204, Short.MAX_VALUE)
                        .addComponent(jLabel36)
                        .addGap(218, 218, 218))))
        );
        requestedActivitesPanelLayout.setVerticalGroup(
            requestedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(requestedActivitesPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(requestedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(jLabel36))
                .addGroup(requestedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(requestedActivitesPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel37)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel39)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel41))
                    .addGroup(requestedActivitesPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(requestedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(requestedActivitesPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(CancelRequestButton))
                    .addGroup(requestedActivitesPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel38)))
                .addContainerGap(216, Short.MAX_VALUE))
        );

        myActivitiesPanel.addTab("Requested Activities", requestedActivitesPanel);

        jLabel42.setText("Request Details");

        jLabel43.setText("Activity Name :  ");

        jLabel44.setText("Status");

        jLabel45.setText("Branch Name : ");

        jLabel46.setText("Start Date : ");

        jLabel47.setText("End Date : ");

        jLabel48.setText("Reserved Activities");

        reservedActivitiesList.setToolTipText("You can double click to cancel Request\n");
        reservedActivitiesList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reservedActivitiesListMouseClicked(evt);
            }
        });
        reservedActivitiesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                reservedActivitiesListValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(reservedActivitiesList);

        javax.swing.GroupLayout reservedActivitesPanelLayout = new javax.swing.GroupLayout(reservedActivitesPanel);
        reservedActivitesPanel.setLayout(reservedActivitesPanelLayout);
        reservedActivitesPanelLayout.setHorizontalGroup(
            reservedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservedActivitesPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(reservedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reservedActivitesPanelLayout.createSequentialGroup()
                        .addGap(316, 316, 316)
                        .addComponent(jLabel44)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(reservedActivitesPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addGroup(reservedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel43)
                            .addComponent(jLabel45)
                            .addComponent(jLabel46)
                            .addComponent(jLabel47))
                        .addContainerGap(299, Short.MAX_VALUE))
                    .addGroup(reservedActivitesPanelLayout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                        .addComponent(jLabel42)
                        .addGap(218, 218, 218))))
        );
        reservedActivitesPanelLayout.setVerticalGroup(
            reservedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservedActivitesPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(reservedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(jLabel42))
                .addGroup(reservedActivitesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reservedActivitesPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel43)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel45)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel46)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel47))
                    .addGroup(reservedActivitesPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addComponent(jLabel44)
                .addContainerGap(235, Short.MAX_VALUE))
        );

        myActivitiesPanel.addTab("Reserved Activities", reservedActivitesPanel);

        DynamicPanel.add(myActivitiesPanel, "card6");

        activitynameLabel.setText("Activity Name : ");

        activitiesList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        activitiesList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                activitiesListValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(activitiesList);

        activitystarttimeLabel.setText("Start Time : ");

        jLabel29.setText("Activites List");

        jLabel30.setText("Branch ID");

        activityendtimeLabel.setText("End Time : ");

        totalroomsLabel1.setText("Info :");

        branchCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                branchCmbItemStateChanged(evt);
            }
        });

        jLabel33.setText("Hotel Name : ");

        requestRoomButton1.setText("Request Activity");
        requestRoomButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestRoomButton1ActionPerformed(evt);
            }
        });

        jLabel34.setText("Hotel Location : ");

        activityStatusLabel.setText("Status");

        jLabel35.setText("Activity Properties");

        javax.swing.GroupLayout activityPanelLayout = new javax.swing.GroupLayout(activityPanel);
        activityPanel.setLayout(activityPanelLayout);
        activityPanelLayout.setHorizontalGroup(
            activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activityPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(activityPanelLayout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(activityPanelLayout.createSequentialGroup()
                        .addGroup(activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel33)
                            .addComponent(jLabel34)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(branchCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                        .addGroup(activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(activityPanelLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(activityStatusLabel))
                            .addGroup(activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, activityPanelLayout.createSequentialGroup()
                                    .addGroup(activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(activityPanelLayout.createSequentialGroup()
                                            .addGap(59, 59, 59)
                                            .addComponent(jLabel35))
                                        .addComponent(activitynameLabel)
                                        .addComponent(activitystarttimeLabel)
                                        .addComponent(activityendtimeLabel))
                                    .addGap(160, 160, 160))
                                .addGroup(activityPanelLayout.createSequentialGroup()
                                    .addComponent(totalroomsLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(activityinfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(activityPanelLayout.createSequentialGroup()
                                    .addGap(58, 58, 58)
                                    .addComponent(requestRoomButton1))))
                        .addGap(43, 43, 43))))
        );
        activityPanelLayout.setVerticalGroup(
            activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activityPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel30)
                .addGroup(activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(activityPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(branchCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel33)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(activityPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel35)
                        .addGap(35, 35, 35)
                        .addComponent(activitynameLabel)
                        .addGap(27, 27, 27)
                        .addComponent(activitystarttimeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(activityendtimeLabel)
                        .addGap(18, 18, 18)
                        .addGroup(activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(activityinfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalroomsLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(requestRoomButton1)
                        .addGap(36, 36, 36)
                        .addComponent(activityStatusLabel)))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        DynamicPanel.add(activityPanel, "card4");

        jMenu1.setText("MENU");

        jMenuItem1.setText("Log Out");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DynamicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(DynamicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void updatePersonalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePersonalButtonActionPerformed
        // TODO add your handling code here:
        DynamicPanel.removeAll();
        DynamicPanel.add(updatePersonalPanel);
        DynamicPanel.repaint();
        DynamicPanel.revalidate();
        DynamicPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "UPDATE PROFILE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        customerUpdateFill();
    }//GEN-LAST:event_updatePersonalButtonActionPerformed

    private void reservationPanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationPanelButtonActionPerformed
        // TODO add your handling code here:
        DynamicPanel.removeAll();
        DynamicPanel.add(reservationPanel);
        DynamicPanel.repaint();
        DynamicPanel.revalidate();
        DynamicPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "RESERVATION", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        fillReservationBranch();
    }//GEN-LAST:event_reservationPanelButtonActionPerformed

    private void activityPanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activityPanelButtonActionPerformed
        // TODO add your handling code here:
        DynamicPanel.removeAll();
        DynamicPanel.add(activityPanel);
        DynamicPanel.repaint();
        DynamicPanel.revalidate();
        DynamicPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "ACTIVITY", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        fillActivityBranch();
    }//GEN-LAST:event_activityPanelButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String fname = updatefnameField.getText().trim();
        String lname = updatelnameField.getText().trim();
        String mail = updatemailField.getText().trim() ;
        long phone = Long.parseLong(updatephoneField.getText().trim());
        Date date = updateDatePicker.getDate();
        if(fname.equals("")||
               lname.equals("")|| mail.equals("")||
                mail.equals("")||
                updatephoneField.getText().trim().equals("")||
                date == null
                )
        {
            updateStatusLabel.setText("You have to fill information before updating!!");
        }
        else if(!isLong(updatephoneField.getText()))
        {
            updateStatusLabel.setText("Your phone number should not include characters!");

        }
        else
        {
            customer.setFname(fname);
            customer.setLname(lname);
            customer.setMail(mail);
            customer.setPhone(phone);
            customer.setBirthdate(date);
            if(db.updateCustomer(customer))
            {
                customerFill();
                customerUpdateFill();
                updateStatusLabel.setText("Update Successfull!!");
            }
            else
            {
                updateStatusLabel.setText("Not updated");
            }
            
            
        }
        
        
    }//GEN-LAST:event_updateButtonActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        
        ArrayList<Room> rooms = new ArrayList<Room>();
        try {
            // TODO add your handling code here:
            Branch branch = (Branch)jComboBox1.getSelectedItem();
            jLabel7.setText("Hotel Name : "+branch.getName());
            jLabel8.setText("Hotel Location : "+branch.getLocation());
            
            ResultSet rs = db.getRooms(branch.getId());
            if(rs!=null)
            {
                 while(rs.next())
            {
                Room room = new Room(rs.getInt(1), rs.getString(2), rs.getInt(3), rs.getInt(4), rs.getInt(5));
                rooms.add(room);
                
            }
                 emptyRoomList.setListData(rooms.toArray());
  
            }
           
        }
        catch(SQLException ex)
        {
             Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void emptyRoomListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_emptyRoomListValueChanged
        // TODO add your handling code here:
        if(emptyRoomList.getSelectedValue()!=null)
        {
            Room room = (Room)emptyRoomList.getSelectedValue();
        roomnumberLabel.setText("Room Number : "+room.getRoomnumber());
        roomtypeLabel.setText("Room Type : "+room.getRoomtypename());
        maxguestsLabel.setText("Max Guests : "+room.getMax_guests());
        totalroomsLabel.setText("Total Rooms : "+room.getTotal_rooms());
        dailypriceLabel.setText("Daily Price : "+room.getPrice());
            
        }
        
    }//GEN-LAST:event_emptyRoomListValueChanged

    private void requestRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestRoomButtonActionPerformed
        // TODO add your handling code here:
        if(emptyRoomList.getSelectedValue()==null)

        {
            reservationStatusLabel.setText("You should select Room");
        }
        else if(jComboBox1.getSelectedItem()== null)
        {
            reservationStatusLabel.setText("You should select Branch");
        }
        else if(jXDatePicker1.getDate()==null ||jXDatePicker2.getDate()==null )
        {
            reservationStatusLabel.setText("You should select Dates");
        }
        else if(jXDatePicker1.getDate().compareTo(jXDatePicker2.getDate())>0)
        {
            reservationStatusLabel.setText("Your arrival date should be before departure date!");
        }
        else
        {
            int room_number = ((Room)emptyRoomList.getSelectedValue()).getRoomnumber();
            int price = ((Room)emptyRoomList.getSelectedValue()).getPrice();
            int customer_id = customer.getId();
            int branch_id = ((Branch)jComboBox1.getSelectedItem()).getId();
            Date arrivalDate = jXDatePicker1.getDate();
            Date departureDate = jXDatePicker2.getDate();
            int result = db.ReserveRoom(customer_id, room_number, branch_id, arrivalDate, departureDate, price);
            if(result ==1)
            {
                reservationStatusLabel.setText("Room reserved");
                clearRequestRoom();
            }
            else if(result == -1)
            {
                reservationStatusLabel.setText("You already reserved this room");
            }
            else
            {
                reservationStatusLabel.setText("Reservation is not completed!!");
            }
            
            
        }
        
        
        
        
    }//GEN-LAST:event_requestRoomButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DynamicPanel.removeAll();
        DynamicPanel.add(myReservationPanel);
        DynamicPanel.repaint();
        DynamicPanel.revalidate();
        DynamicPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "MY RESERVATIONS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        fillRequestedRooms();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void requestedRoomsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestedRoomsListMouseClicked
        // TODO add your handling code here:
        RoomReservation room = (RoomReservation)requestedRoomsList.getSelectedValue();
        jLabel16.setText("Room Number : "+room.getRoom_number());
        jLabel17.setText("Branch Name : "+room.getBranch_id());
        jLabel18.setText("Arrival Date : "+room.getArrival_date().toString());
        jLabel19.setText("Departure Date : "+room.getDeparture_date().toString());
        jLabel20.setText("Daily Price : "+room.getPrice());
        long difference = room.getDeparture_date().getTime() - room.getArrival_date().getTime();
        int days = (int)TimeUnit.MILLISECONDS.toDays(difference);
        double totalprice = days*room.getPrice();
        jLabel21.setText("Total Price : "+totalprice);
    }//GEN-LAST:event_requestedRoomsListMouseClicked

    private void reservedRoomsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservedRoomsListMouseClicked
        // TODO add your handling code here:
        RoomReservation room = (RoomReservation)reservedRoomsList.getSelectedValue();
        jLabel16.setText("Room Number : "+room.getRoom_number());
        jLabel17.setText("Branch Name : "+room.getBranch_id());
        jLabel18.setText("Arrival Date : "+room.getArrival_date().toString());
        jLabel19.setText("Departure Date : "+room.getDeparture_date().toString());
        jLabel20.setText("Daily Price : "+room.getPrice());
        long difference = room.getDeparture_date().getTime() - room.getArrival_date().getTime();
        int days = (int)TimeUnit.MILLISECONDS.toDays(difference);
        double totalprice = days*room.getPrice();
        jLabel21.setText("Total Price : "+totalprice);
    }//GEN-LAST:event_reservedRoomsListMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        RoomReservation room = (RoomReservation)requestedRoomsList.getSelectedValue();
        int dialogResult = JOptionPane.showConfirmDialog (null, "Remove request room number : "+room.getRoom_number(),"Confirmation",JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION)
        {
             if(db.removeRequest(room, customer.getId()))
        {
            jLabel24.setText("Removed Successfully");
            fillRequestedRooms();
        }
        else
        {
            jLabel24.setText("Not removed");
            
        }
            
        }
        
       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void updatePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePasswordButtonActionPerformed
        
        String currentpassword = currentpasswordField.getText();
        String newpassword = newpasswordField.getText().trim();
        if(!newpassword.equals(confirmnewpasswordField.getText().trim()))
        {
            updateStatusLabel.setText("Password doesnt match please enter confirmation correct!!");
        }
        else if(newpassword.equals("") || currentpassword.equals(""))
        {
           updateStatusLabel.setText("Your password should not be empty!!");
        }
        
        else
        {
            try {
            // TODO add your handling code here:]
            
            int id = customer.getId();
            String query = "select * from customer where id = "+id+" and passw = '"+currentpassword+"'";
            ResultSet rs = db.getResultOfQuery(query);
            if(rs.next())
            {
                query = "update customer set passw ='"+newpassword+"' where id = "+id;
                if(db.updateQuery(query))
                {
                    updateStatusLabel.setText("Your password is updated");
                  
                }
                else
                {
                    updateStatusLabel.setText("Update is not completed");
                    
                }
                
            }
            else
            {
                updateStatusLabel.setText("Your current password is incorrect!!");
            }
        }
        catch(SQLException ex)
        {
            
            
        }
            
        }
        
            
          clearUpdatePassword();  
        
    }//GEN-LAST:event_updatePasswordButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        CustomerLogin cl = new CustomerLogin();
        cl.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void activitiesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_activitiesListValueChanged
        // TODO add your handling code here:
        Activity activity = (Activity)activitiesList.getSelectedValue();
        if(activity!=null)
        {
            activitynameLabel.setText("Activity Name : "+activity.getActivity_name());
            activitystarttimeLabel.setText("Start Time : "+ activity.getStart_time());
            activityendtimeLabel.setText("End Time : "+activity.getEnd_time());
            activityinfoLabel.setText(activity.getInfo());
            
            
        }
    }//GEN-LAST:event_activitiesListValueChanged

    private void branchCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_branchCmbItemStateChanged
        // TODO add your handling code here:
        //ArrayList<Room> rooms = new ArrayList<Room>();
        
            // TODO add your handling code here:
            Branch branch = (Branch)branchCmb.getSelectedItem();
            if(branch!=null)
            {
                jLabel33.setText("Hotel Name : "+branch.getName());
                jLabel34.setText("Hotel Location : "+branch.getLocation());
                
                ResultSet rs = db.getActivities(branch.getId());
                ArrayList<Activity> array = new ArrayList<Activity>();
                try {
                    while(rs.next())
                    {
                        Activity activity = new Activity(rs.getInt(1),rs.getInt(2), rs.getString(3), rs.getDate(4), rs.getDate(5), rs.getString(6) );
                        array.add(activity);                   
                    }
                    activitiesList.setListData(array.toArray());
                } catch (SQLException ex) {
                    Logger.getLogger(CustomerMain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }           
        
        
        
    }//GEN-LAST:event_branchCmbItemStateChanged

    private void requestRoomButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestRoomButton1ActionPerformed
        // TODO add your handling code here:
        Activity activity = (Activity)activitiesList.getSelectedValue();
        Branch branch = (Branch)branchCmb.getSelectedItem();
        
        if(activity==null)
        {
            activityStatusLabel.setText("Please select activity to request!!");
            
        }
        else if(branch==null)
        {
            activityStatusLabel.setText("Please select branch to request!!");
        }
        else
        {
            int customer_id = customer.getId();
            int activity_id = activity.getId();
            int branch_id = branch.getId();
            int status = db.requestActivity(customer_id, branch_id, activity_id);
            if(status==1)
            {
                activityStatusLabel.setText("Requested for this activity");
            }
            else if(status ==0)
            {
                activityStatusLabel.setText("Request is not complete");
                
            }
            else if(status == -1)
            {
                activityStatusLabel.setText("You have requested this activity before");

            }
        }
        
        clearActivity();
        
        
    }//GEN-LAST:event_requestRoomButton1ActionPerformed

    private void myActivitesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myActivitesButtonActionPerformed
        // TODO add your handling code here:
        DynamicPanel.removeAll();
        DynamicPanel.add(myActivitiesPanel);
        DynamicPanel.repaint();
        DynamicPanel.revalidate();
        DynamicPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "MY ACTIVITIES", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        fillReservationBranch();
        fillMyActivities();
        
    }//GEN-LAST:event_myActivitesButtonActionPerformed

    private void CancelRequestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelRequestButtonActionPerformed
        // TODO add your handling code here:
        int customer_id = customer.getId();
        Activity activity = (Activity)requestedActivitiesList.getSelectedValue(); 
        int branch_id = activity.getBranch_id();
        int activity_id = activity.getId();
        if(db.removeActivityRequest(customer_id, branch_id, activity_id))
        {
            jLabel38.setText("Removed Successfully!!");
            
        }
        else
        {
            jLabel38.setText("Remove not completed!!");
            
        }
        clearRequestedActivities();
        fillMyActivities();
        
        
    }//GEN-LAST:event_CancelRequestButtonActionPerformed

    private void reservedActivitiesListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservedActivitiesListMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_reservedActivitiesListMouseClicked

    private void myActivitiesPanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_myActivitiesPanelFocusGained
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null,"Focus gained");
    }//GEN-LAST:event_myActivitiesPanelFocusGained

    private void requestedActivitiesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_requestedActivitiesListValueChanged
        // TODO add your handling code here:
        Activity activity = (Activity)requestedActivitiesList.getSelectedValue();
        if(activity!=null)
        {
            jLabel37.setText("Activity Name : "+activity.getActivity_name());
            jLabel39.setText("Info : "+activity.getInfo());
            jLabel40.setText("Start Time : "+activity.getStart_time().toString());
            jLabel41.setText("End Time : "+activity.getEnd_time().toString());
            
        }
    }//GEN-LAST:event_requestedActivitiesListValueChanged

    private void reservedActivitiesListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_reservedActivitiesListValueChanged
        // TODO add your handling code here:
        Activity activity = (Activity)reservedActivitiesList.getSelectedValue();
        if(activity!=null)
        {
            jLabel43.setText("Activity Name : "+activity.getActivity_name());
            jLabel45.setText("Info : "+activity.getInfo());
            jLabel46.setText("Start Time : "+activity.getStart_time().toString());
            jLabel47.setText("End Time : "+activity.getEnd_time().toString());
            
        }
    }//GEN-LAST:event_reservedActivitiesListValueChanged

    public void clearActivity()
    {
        activitynameLabel.setText("Activity Name : ");
        activitystarttimeLabel.setText("Start Time : ");
        activityendtimeLabel.setText("End Time : ");
        activityinfoLabel.setText("");
        activitiesList.clearSelection();
    }
    public void clearUpdatePassword()
    {
        currentpasswordField.setText("");
        newpasswordField.setText("");
        confirmnewpasswordField.setText("");
        
    }
    public void clearRequestedActivities()
    {
        jLabel37.setText("Activity Name : ");
            jLabel39.setText("Info : ");
            jLabel40.setText("Start Time : ");
            jLabel41.setText("End Time : ");
            requestedActivitiesList.clearSelection();
    }
    public boolean isLong(String number) // Function for checking if the string is integer returns true if integer else false
    {
        try{
            Long.parseLong(number);
            return true;
            
        }
        catch(Exception e)
        {
            return false;
            
        }
    }
    
    public void customerFill()
    {
        customer = db.getCustomer(id);
        idLabel.setText("ID :"+ customer.getId());
        fnameLabel.setText("First Name : "+customer.getFname());
        lnameLabel.setText("Last Name : "+customer.getLname());
        bdateLabel.setText("Birthdate : "+customer.getBirthdate().toString());
        mailLabel.setText("Mail address : "+customer.getMail());
        phonenumberLabel.setText("Phone number : "+customer.getPhone());
    }
    
    public void customerUpdateFill()
    {
        updateidField.setText(""+customer.getId());
        updatefnameField.setText(customer.getFname());
        updatelnameField.setText(customer.getLname());
        updatemailField.setText(customer.getMail());
        updatephoneField.setText(""+customer.getPhone());
        updateDatePicker.setDate(customer.getBirthdate());   
    }
    
    public void fillReservationBranch()
    {
        if(jComboBox1.getItemCount()==0)
        {
            try {
            ResultSet rs = db.getBranch();
            
            while(rs.next())
            {
                Branch branch = new Branch(rs.getInt(1), rs.getString(2), rs.getString(3));
                jComboBox1.addItem(branch);
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(CustomerMain.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } 
    }
    
    public void fillMyActivities()
    {
        ArrayList<Activity> requestedActivities = new ArrayList<Activity>();
        ArrayList<Activity> reservedActivities = new ArrayList<Activity>();

        String query = "select id,activity.branch_id, activity_name, start_time, end_time, info, approve_status " +
                "from activity, activity_requests " +
                "where id = activity_id and customer_id = "+customer.getId();
        ResultSet rs = db.getResultOfQuery(query);
        if(rs!=null)
        {
            try {
            while(rs.next())
            {
                Activity activity = new Activity(rs.getInt(1), rs.getInt(2), rs.getString(3), rs.getDate(4),rs.getDate(5), rs.getString(6) );
                
                if(rs.getString("approve_status").equals("no"))
                {
                   requestedActivities.add(activity);
                }
                else
                {
                    reservedActivities.add(activity);
                }
  
            }
            requestedActivitiesList.setListData(requestedActivities.toArray());
            reservedActivitiesList.setListData(reservedActivities.toArray());
            
            
        } catch (SQLException ex) {
            Logger.getLogger(CustomerMain.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        }
        
    }
    public void fillActivityBranch()
    {
        if(branchCmb.getItemCount()==0)
        {
            try {
            ResultSet rs = db.getBranch();
            
            while(rs.next())
            {
                Branch branch = new Branch(rs.getInt(1), rs.getString(2), rs.getString(3));
                branchCmb.addItem(branch);
                
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(CustomerMain.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        } 
        
        
    }
    public void fillRequestedRooms()
    {
        ArrayList<RoomReservation> requestedRooms = new ArrayList<RoomReservation>();
        ArrayList<RoomReservation> reservedRooms = new ArrayList<RoomReservation>();
        try {
            String query = "select * from room_requests where customer_id="+customer.getId();
            ResultSet rs = db.getResultOfQuery(query);
            while(rs.next())
            {
                RoomReservation room = new RoomReservation(rs.getInt(2), rs.getInt(3), rs.getDate(4), rs.getDate(5), rs.getInt(6), rs.getString(7));
                if(rs.getString(7).equals("no"))
                {
                    requestedRooms.add(room);
                }
                else
                {
                    reservedRooms.add(room);
                }
                
            }
            requestedRoomsList.setListData(requestedRooms.toArray());
            reservedRoomsList.setListData(reservedRooms.toArray());
            
        } catch (SQLException ex) {
            Logger.getLogger(CustomerMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
    public void clearRequestRoom()
    {
        roomnumberLabel.setText("Room Number : ");
        roomtypeLabel.setText("Room Type : ");
        maxguestsLabel.setText("Max Guests : ");
        totalroomsLabel.setText("Total Rooms : ");
        dailypriceLabel.setText("Daily Price : ");
        jXDatePicker1.setDate(null);
        jXDatePicker2.setDate(null);
        emptyRoomList.clearSelection();
    }

    /**
     *
     */ 
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CustomerMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CustomerMain().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelRequestButton;
    private javax.swing.JPanel DynamicPanel;
    private javax.swing.JList activitiesList;
    private javax.swing.JPanel activityPanel;
    private javax.swing.JButton activityPanelButton;
    private javax.swing.JLabel activityStatusLabel;
    private javax.swing.JLabel activityendtimeLabel;
    private javax.swing.JLabel activityinfoLabel;
    private javax.swing.JLabel activitynameLabel;
    private javax.swing.JLabel activitystarttimeLabel;
    private javax.swing.JLabel bdateLabel;
    private javax.swing.JComboBox branchCmb;
    private javax.swing.JPasswordField confirmnewpasswordField;
    private javax.swing.JPasswordField currentpasswordField;
    private javax.swing.JLabel dailypriceLabel;
    private javax.swing.JList emptyRoomList;
    private javax.swing.JLabel fnameLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker2;
    private javax.swing.JLabel lnameLabel;
    private javax.swing.JLabel mailLabel;
    private javax.swing.JLabel maxguestsLabel;
    private javax.swing.JButton myActivitesButton;
    private javax.swing.JTabbedPane myActivitiesPanel;
    private javax.swing.JPanel myReservationPanel;
    private javax.swing.JPasswordField newpasswordField;
    private javax.swing.JLabel phonenumberLabel;
    private javax.swing.JButton requestRoomButton;
    private javax.swing.JButton requestRoomButton1;
    private javax.swing.JPanel requestedActivitesPanel;
    private javax.swing.JList requestedActivitiesList;
    private javax.swing.JList requestedRoomsList;
    private javax.swing.JPanel reservationPanel;
    private javax.swing.JButton reservationPanelButton;
    private javax.swing.JLabel reservationStatusLabel;
    private javax.swing.JPanel reservedActivitesPanel;
    private javax.swing.JList reservedActivitiesList;
    private javax.swing.JList reservedRoomsList;
    private javax.swing.JLabel roomnumberLabel;
    private javax.swing.JLabel roomtypeLabel;
    private javax.swing.JLabel totalroomsLabel;
    private javax.swing.JLabel totalroomsLabel1;
    private javax.swing.JButton updateButton;
    private org.jdesktop.swingx.JXDatePicker updateDatePicker;
    private javax.swing.JButton updatePasswordButton;
    private javax.swing.JButton updatePersonalButton;
    private javax.swing.JPanel updatePersonalPanel;
    private javax.swing.JLabel updateStatusLabel;
    private javax.swing.JTextField updatefnameField;
    private javax.swing.JTextField updateidField;
    private javax.swing.JTextField updatelnameField;
    private javax.swing.JTextField updatemailField;
    private javax.swing.JTextField updatephoneField;
    // End of variables declaration//GEN-END:variables
}
