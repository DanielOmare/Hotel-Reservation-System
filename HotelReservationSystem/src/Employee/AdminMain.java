/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Employee;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Anar
 */
public class AdminMain extends javax.swing.JFrame {

    /**
     * Creates new form AdminMain
     */
    String id;
    Database db;
    Admin admin;
    public AdminMain(Database db, String id) { // Constructor recieves 2 parameters Database object and admin 
        this.db = db;
        this.id = id;
        
        initComponents();
        filladmin(); // calling function for filling admin information
        DynamicPanel.removeAll();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        empTypeButtonGroup = new javax.swing.ButtonGroup();
        menuPanel = new javax.swing.JPanel();
        updatePanelBut = new javax.swing.JButton();
        addEmpPanelBut = new javax.swing.JButton();
        searchEmpPanelBut = new javax.swing.JButton();
        adminPanel = new javax.swing.JPanel();
        namelbl = new javax.swing.JLabel();
        sdatelbl = new javax.swing.JLabel();
        idlbl = new javax.swing.JLabel();
        maillbl = new javax.swing.JLabel();
        addresslbl = new javax.swing.JLabel();
        branchlbl = new javax.swing.JLabel();
        DynamicPanel = new javax.swing.JPanel();
        addEmpPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        addEmployeeIDField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        addEmployeeFnameField = new javax.swing.JTextField();
        addEmployeeLnameField = new javax.swing.JTextField();
        addEmployeeMailField = new javax.swing.JTextField();
        addEmployeeAddressField = new javax.swing.JTextField();
        addEmployeeFrontRd = new javax.swing.JRadioButton();
        addEmployeeBackRd = new javax.swing.JRadioButton();
        addEmployeeBranchlist = new javax.swing.JComboBox();
        addEmployeeButton = new javax.swing.JButton();
        addEmployeeStatusLbl = new javax.swing.JLabel();
        updatePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fnameField = new javax.swing.JTextField();
        lnameField = new javax.swing.JTextField();
        mailField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        updateButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        passwordConfirmField = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        updatePasswordButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        currentPasswordField = new javax.swing.JPasswordField();
        statlbl = new javax.swing.JLabel();
        searchEmpPanel = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        searchByCmb = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        searchEmployeeType = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        searchResultCount = new javax.swing.JLabel();
        searchEmployeeFnameLbl = new javax.swing.JLabel();
        searchEmployeeLnameLbl = new javax.swing.JLabel();
        searchEmployeeMailLbl = new javax.swing.JLabel();
        searchEmployeeAddressLbl = new javax.swing.JLabel();
        searchEmployeeTypeLbl = new javax.swing.JLabel();
        searchEmployeeBranchLbl = new javax.swing.JLabel();
        searchEmployeeIDLbl = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        searchEmployeeFnameField = new javax.swing.JTextField();
        searchEmployeeLnameField = new javax.swing.JTextField();
        searchEmployeeMailField = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        searchEmployeeAddressField = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin Main Page");

        menuPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "MENU", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        menuPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        updatePanelBut.setText("Update Profile");
        updatePanelBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePanelButActionPerformed(evt);
            }
        });

        addEmpPanelBut.setText("Add Employee");
        addEmpPanelBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmpPanelButActionPerformed(evt);
            }
        });

        searchEmpPanelBut.setText("Search Employee");
        searchEmpPanelBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchEmpPanelButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(updatePanelBut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addEmpPanelBut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchEmpPanelBut, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updatePanelBut)
                .addGap(18, 18, 18)
                .addComponent(addEmpPanelBut)
                .addGap(18, 18, 18)
                .addComponent(searchEmpPanelBut)
                .addContainerGap(483, Short.MAX_VALUE))
        );

        adminPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "MY PROFILE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        namelbl.setText("Name");

        sdatelbl.setText("Starting Date : ");

        idlbl.setText("ID");

        maillbl.setText("Mail address : ");

        addresslbl.setText("Address");

        branchlbl.setText("Branch ID : ");

        javax.swing.GroupLayout adminPanelLayout = new javax.swing.GroupLayout(adminPanel);
        adminPanel.setLayout(adminPanelLayout);
        adminPanelLayout.setHorizontalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(idlbl)
                    .addComponent(addresslbl)
                    .addComponent(sdatelbl))
                .addGap(60, 60, 60)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(maillbl)
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addComponent(namelbl)
                        .addGap(119, 119, 119)
                        .addComponent(branchlbl)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        adminPanelLayout.setVerticalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namelbl)
                    .addComponent(idlbl)
                    .addComponent(branchlbl))
                .addGap(18, 18, 18)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sdatelbl)
                    .addComponent(maillbl))
                .addGap(18, 18, 18)
                .addComponent(addresslbl)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        DynamicPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        DynamicPanel.setFocusTraversalPolicyProvider(true);
        DynamicPanel.setLayout(new java.awt.CardLayout());

        addEmpPanel.setPreferredSize(new java.awt.Dimension(746, 481));

        jLabel9.setText("First Name : ");

        jLabel10.setText("Last Name : ");

        jLabel11.setText("Mail address : ");

        jLabel12.setText("Employee ID : ");

        addEmployeeIDField.setEditable(false);
        addEmployeeIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeIDFieldActionPerformed(evt);
            }
        });

        jLabel13.setText("Address : ");

        jLabel14.setText("Employee Type : ");

        jLabel15.setText("Branch : ");

        empTypeButtonGroup.add(addEmployeeFrontRd);
        addEmployeeFrontRd.setText("Front Employee");

        empTypeButtonGroup.add(addEmployeeBackRd);
        addEmployeeBackRd.setText("Back Employee");

        addEmployeeBranchlist.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addEmployeeButton.setText("Add Employee");
        addEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEmployeeButtonActionPerformed(evt);
            }
        });

        addEmployeeStatusLbl.setText("Status");

        javax.swing.GroupLayout addEmpPanelLayout = new javax.swing.GroupLayout(addEmpPanel);
        addEmpPanel.setLayout(addEmpPanelLayout);
        addEmpPanelLayout.setHorizontalGroup(
            addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEmpPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addGap(47, 47, 47)
                .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addEmployeeAddressField)
                    .addGroup(addEmpPanelLayout.createSequentialGroup()
                        .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(addEmployeeMailField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                .addComponent(addEmployeeLnameField, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(addEmpPanelLayout.createSequentialGroup()
                                .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addEmployeeButton)
                                    .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(addEmployeeFrontRd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addEmployeeBranchlist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addEmployeeIDField)
                                        .addComponent(addEmployeeFnameField)))
                                .addGap(18, 18, 18)
                                .addComponent(addEmployeeBackRd)))
                        .addGap(0, 49, Short.MAX_VALUE)))
                .addContainerGap(295, Short.MAX_VALUE))
            .addGroup(addEmpPanelLayout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(addEmployeeStatusLbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addEmpPanelLayout.setVerticalGroup(
            addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEmpPanelLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(addEmployeeIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(addEmployeeFnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addEmpPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addEmpPanelLayout.createSequentialGroup()
                        .addComponent(addEmployeeLnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(addEmployeeMailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(addEmployeeAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(addEmployeeFrontRd)
                    .addComponent(addEmployeeBackRd))
                .addGap(19, 19, 19)
                .addGroup(addEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(addEmployeeBranchlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(addEmployeeButton)
                .addGap(18, 18, 18)
                .addComponent(addEmployeeStatusLbl)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        DynamicPanel.add(addEmpPanel, "card3");

        updatePanel.setPreferredSize(new java.awt.Dimension(746, 481));

        jLabel2.setText("First Name : ");

        jLabel3.setText("Last Name : ");

        jLabel4.setText("Mail Address : ");

        jLabel5.setText("Address : ");

        fnameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnameFieldActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("New Password");

        jLabel7.setText("Confirm");

        updatePasswordButton.setText("Update Password");
        updatePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePasswordButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Current Password");

        statlbl.setText("Status");

        javax.swing.GroupLayout updatePanelLayout = new javax.swing.GroupLayout(updatePanel);
        updatePanel.setLayout(updatePanelLayout);
        updatePanelLayout.setHorizontalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(updatePasswordButton)
                            .addComponent(updateButton)
                            .addGroup(updatePanelLayout.createSequentialGroup()
                                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatePanelLayout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(47, 47, 47))
                                            .addGroup(updatePanelLayout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(48, 48, 48)))
                                        .addGroup(updatePanelLayout.createSequentialGroup()
                                            .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4)
                                                .addComponent(jLabel5))
                                            .addGap(38, 38, 38)))
                                    .addGroup(updatePanelLayout.createSequentialGroup()
                                        .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel8))
                                        .addGap(47, 47, 47)))
                                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(addressField)
                                    .addComponent(mailField)
                                    .addComponent(fnameField)
                                    .addComponent(lnameField)
                                    .addComponent(passwordField)
                                    .addComponent(passwordConfirmField)
                                    .addComponent(currentPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)))))
                    .addGroup(updatePanelLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(statlbl)))
                .addContainerGap(445, Short.MAX_VALUE))
        );
        updatePanelLayout.setVerticalGroup(
            updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(fnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(mailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateButton)
                .addGap(11, 11, 11)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(currentPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordConfirmField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(updatePasswordButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(statlbl)
                .addGap(43, 43, 43))
        );

        DynamicPanel.add(updatePanel, "card2");

        searchEmpPanel.setPreferredSize(new java.awt.Dimension(746, 481));

        searchByCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "By ID", "By Name", "By Surname" }));

        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(jList1);

        searchEmployeeType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Admin", "Front", "Back" }));

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchResultCount.setText("Number Of Result");

        searchEmployeeFnameLbl.setText("First Name : ");

        searchEmployeeLnameLbl.setText("Last Name : ");

        searchEmployeeMailLbl.setText("Mail : ");

        searchEmployeeAddressLbl.setText("Address : ");

        searchEmployeeTypeLbl.setText("Type : ");

        searchEmployeeBranchLbl.setText("Branch ID : ");

        searchEmployeeIDLbl.setText("ID : ");

        jButton1.setText("Remove");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        searchEmployeeAddressField.setColumns(20);
        searchEmployeeAddressField.setRows(5);
        jScrollPane4.setViewportView(searchEmployeeAddressField);

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchEmpPanelLayout = new javax.swing.GroupLayout(searchEmpPanel);
        searchEmpPanel.setLayout(searchEmpPanelLayout);
        searchEmpPanelLayout.setHorizontalGroup(
            searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchEmpPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchEmpPanelLayout.createSequentialGroup()
                        .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchEmpPanelLayout.createSequentialGroup()
                                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(searchByCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchEmpPanelLayout.createSequentialGroup()
                                .addComponent(searchEmployeeType, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(searchButton))
                            .addGroup(searchEmpPanelLayout.createSequentialGroup()
                                .addComponent(searchEmployeeFnameLbl)
                                .addGap(18, 18, 18)
                                .addComponent(searchEmployeeFnameField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(searchEmployeeBranchLbl)
                            .addComponent(searchEmployeeIDLbl)
                            .addGroup(searchEmpPanelLayout.createSequentialGroup()
                                .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchEmployeeLnameLbl)
                                    .addComponent(searchEmployeeMailLbl)
                                    .addComponent(searchEmployeeAddressLbl)
                                    .addComponent(searchEmployeeTypeLbl))
                                .addGap(18, 18, 18)
                                .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(searchEmployeeLnameField)
                                        .addComponent(searchEmployeeMailField, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))
                                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(101, Short.MAX_VALUE))
                    .addGroup(searchEmpPanelLayout.createSequentialGroup()
                        .addComponent(searchResultCount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(43, 43, 43)
                        .addComponent(jButton2)
                        .addGap(112, 112, 112))))
        );
        searchEmpPanelLayout.setVerticalGroup(
            searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchEmpPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchByCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchEmployeeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchEmpPanelLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchResultCount)
                            .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton1)
                                .addComponent(jButton2)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(searchEmpPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(searchEmployeeIDLbl)
                        .addGap(18, 18, 18)
                        .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchEmployeeFnameLbl)
                            .addComponent(searchEmployeeFnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchEmployeeLnameLbl)
                            .addComponent(searchEmployeeLnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchEmployeeMailLbl)
                            .addComponent(searchEmployeeMailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(searchEmpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchEmployeeAddressLbl)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchEmployeeTypeLbl)
                        .addGap(18, 18, 18)
                        .addComponent(searchEmployeeBranchLbl)
                        .addGap(88, 88, 88))))
        );

        DynamicPanel.add(searchEmpPanel, "card6");

        jMenu1.setText("File");

        jMenuItem1.setText("log out");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Quit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Analysis");

        jMenuItem4.setText("Branch Details");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem3.setText("Room Incomes");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem5.setText("Customer Analysis");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("History");

        jMenuItem6.setText("Employee Login History");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(adminPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DynamicPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(adminPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DynamicPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updatePanelButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePanelButActionPerformed
        // TODO add your handling code here:
        DynamicPanel.removeAll();
        DynamicPanel.add(updatePanel);
        DynamicPanel.repaint();
        DynamicPanel.revalidate();
        DynamicPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "UPDATE PROFILE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        fillupdate();
        
    }//GEN-LAST:event_updatePanelButActionPerformed

    private void addEmpPanelButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmpPanelButActionPerformed
        // TODO add your handling code here:
        DynamicPanel.removeAll();
        DynamicPanel.add(addEmpPanel);
        DynamicPanel.repaint();
        DynamicPanel.revalidate();
        DynamicPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "ADD EMPLOYEE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        fillAddId();
        fillAddBranch();
        
        
    }//GEN-LAST:event_addEmpPanelButActionPerformed

    private void searchEmpPanelButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchEmpPanelButActionPerformed
        // TODO add your handling code here:
        DynamicPanel.removeAll();
        DynamicPanel.add(searchEmpPanel);
        DynamicPanel.repaint();
        DynamicPanel.revalidate();
        DynamicPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2), "SEARCH EMPLOYEE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
    }//GEN-LAST:event_searchEmpPanelButActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        EmployeeLogin a = new EmployeeLogin();
        a.setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void updatePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePasswordButtonActionPerformed
        // TODO add your handling code here:

        String query = "select passw from employee where id = " + admin.getId();
        ResultSet rs = db.getResultOfQuery(query);
        if(passwordField.getText().trim().equals("") || passwordConfirmField.getText().trim().equals(""))
        {
            statlbl.setText("Please Fill Password Fields!!");
        }
        else
        {
            try {
                if(rs.next())
                {
                    if(rs.getString("passw").equals(currentPasswordField.getText()))
                    {
                        if(passwordField.getText().equals(passwordConfirmField.getText()))
                        {
                            query = "update employee set passw = '" + passwordField.getText()+
                            "' where id = "+admin.getId();
                            if(db.updateQuery(query))
                            {
                                statlbl.setText("Password Updated successfully!");
                            }
                            else
                            {
                                statlbl.setText("Not Updated!!");
                            }

                        }
                        else
                        {
                            statlbl.setText("Password you entered doesn't match!!");
                        }

                    }
                    else
                    {
                        statlbl.setText("Password entered is not correc!!!");
                    }

                }
            }
            catch(Exception ex)
            {
            }

        }

        clearPasswordField();
    }//GEN-LAST:event_updatePasswordButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        String query = "update employee set fname = '"+fnameField.getText()+"', lname = '"+
        lnameField.getText()+"', mail = '" + mailField.getText()+"', address = ' " +
        addressField.getText()+"' where id = " + admin.getId();
        //JOptionPane.showMessageDialog(null, query);

        if(db.updateQuery(query))
        {
            statlbl.setText("Updated Successfully");
            //JOptionPane.showMessageDialog(null, "Updated Successfully");
            filladmin();
        }
        else
        {
            statlbl.setText("Not Updated");
            JOptionPane.showMessageDialog(null, "Error occured during the update!!");
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void fnameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fnameFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        
        fillSearchList();
        
        
        
    }//GEN-LAST:event_searchButtonActionPerformed

    
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        
        Employee e = (Employee)jList1.getSelectedValue();
        searchEmployeeIDLbl.setText("ID : "+e.getId());
        searchEmployeeFnameField.setText(e.getFname());
        searchEmployeeLnameField.setText(e.getLname());
        searchEmployeeMailField.setText(e.getMail());
        searchEmployeeAddressField.setText(e.getAddress());
        searchEmployeeTypeLbl.setText("Type : "+ e.getType());
        searchEmployeeBranchLbl.setText("Branch ID : "+ e.getBranch());
    }//GEN-LAST:event_jList1ValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        if(!(jList1.getSelectedValue()==null))
        {
            Employee emp = (Employee)jList1.getSelectedValue();
            String query = "delete from employee where id = "+emp.getId();
            if(db.updateQuery(query))
            {
                searchResultCount.setText("Removed");
                fillSearchList();
                clearSearchField();
            }
            else
            {
                searchResultCount.setText("Not Removed");

            }

        }
        else
        {
            searchResultCount.setText("Please select Employee");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(!(jList1.getSelectedValue()==null))
        {
            Employee emp = (Employee)jList1.getSelectedValue();
            String query = "update employee set fname = '" + searchEmployeeFnameField.getText()+"', lname = '" +
            searchEmployeeLnameField.getText()+"', mail = '" + searchEmployeeMailField.getText()+ "', address = '"+
            searchEmployeeAddressField.getText() +"' where id ="+emp.getId();
            if(db.updateQuery(query))
            {
                searchResultCount.setText("Updated");
                fillSearchList();
                clearSearchField();
                
            }
            else
            {
                searchResultCount.setText("Not Updated");

            }

        }
        else
        {
            searchResultCount.setText("Please select Employee");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void addEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeButtonActionPerformed
        // TODO add your handling code here:

        int id = Integer.parseInt(addEmployeeIDField.getText());
        String fname = addEmployeeFnameField.getText();
        String lname = addEmployeeLnameField.getText();
        String mail = addEmployeeMailField.getText();
        String address = addEmployeeAddressField.getText();
        String type="";
        if(addEmployeeFrontRd.isSelected()) {
            type = "front";
        }
        else if(addEmployeeBackRd.isSelected())
        {
            type = "back";
        }
        else
        {
            //JOptionPane.showMessageDialog(null, "Please select type of employee");
        }
        int branch = Integer.parseInt(addEmployeeBranchlist.getSelectedItem().toString());

        if(fname.trim().equals("") || lname.trim().equals("") || mail.trim().equals("")|| address.trim().equals(""))
        {
            addEmployeeStatusLbl.setText("Please fill employee informations");
        }
        else if(addEmployeeBranchlist.getSelectedItem().toString().equals(""))
        {
            addEmployeeStatusLbl.setText("Please select branch!!");
        }
        else if(empTypeButtonGroup.getSelection()== null)
        {
            addEmployeeStatusLbl.setText("Please select type of employee!!");
        }
        else
        {
            Employee emp = new Employee(id, fname, lname, mail, address, type, branch);

            if(db.insertEmployee(emp))

            {
                addEmployeeStatusLbl.setText("Employee added successfully!!");
                clearAddEmpField();
            }
            else
            {
                addEmployeeStatusLbl.setText("Exception occured during insertion please try again!!");
                JOptionPane.showMessageDialog(null, "Exception occured during insertion");
            }

        }

    }//GEN-LAST:event_addEmployeeButtonActionPerformed

    private void addEmployeeIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEmployeeIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addEmployeeIDFieldActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        BranchDetail bd = new BranchDetail(db);
        bd.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        PaymentDetails pd = new PaymentDetails(db);
        pd.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        CustomerAnalysis ca = new CustomerAnalysis(db);
        ca.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        LoginHistory lh = new LoginHistory(db);
        lh.setVisible(true);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    public void clearSearchField()
    {
        searchEmployeeIDLbl.setText("ID : ");
        searchEmployeeFnameField.setText("");
        searchEmployeeLnameField.setText("");
        searchEmployeeMailField.setText("");
        searchEmployeeAddressField.setText("");
        searchEmployeeTypeLbl.setText("Type : ");
        searchEmployeeBranchLbl.setText("Branch ID : ");
    }
    
    public void fillSearchList()
    {
        String query="";
        
       
            
             if(searchByCmb.getSelectedItem().toString().equals("By ID"))
        {
            query = "select id, fname, lname, mail, address, emp_type, branch_id from employee where id like '"+searchField.getText()+"%'";
        }
        else if(searchByCmb.getSelectedItem().toString().equals("By Name"))
        {
            query = "select id, fname, lname, mail, address, emp_type, branch_id from employee where fname like '"+searchField.getText()+"%'";
        }
        else if(searchByCmb.getSelectedItem().toString().equals("By Surname"))
        {
            query = "select id, fname, lname, mail, address, emp_type, branch_id from employee where lname like '"+searchField.getText()+"%'";
        }
        
        if(searchEmployeeType.getSelectedItem().toString().equals("All"))
        {
            
        }
        else if(searchEmployeeType.getSelectedItem().toString().equals("Front"))
        {
            query = query + " and emp_type = 'front'";
            
        }
        else if(searchEmployeeType.getSelectedItem().toString().equals("Admin"))
        {
            query = query + " and emp_type = 'admin'";
            
        }
        else if(searchEmployeeType.getSelectedItem().toString().equals("Back"))
        {
            query = query + " and emp_type = 'back'";
        }
        
        //JOptionPane.showMessageDialog(null, query);
        
        ArrayList<Employee> list = new ArrayList<Employee>();
        ResultSet rs = db.getResultOfQuery(query);
        int count = 0;
        try {
            while(rs.next())
            {
                count++;
                Employee emp = new Employee(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5),rs.getString(6), rs.getInt(7));
                list.add(emp);
                
                
            }
            jList1.setListData(list.toArray());
            searchResultCount.setText("Number of result : "+count);
        }
        catch(Exception e)
        {
            
        }
        
        
        
        
        
    }
    
    public void clearAddEmpField()
    {
        fillAddId();
        fillAddBranch();
        addEmployeeFnameField.setText("");
        addEmployeeLnameField.setText("");
        addEmployeeMailField.setText("");
        addEmployeeAddressField.setText("");
        addEmployeeFnameField.setText("");
        empTypeButtonGroup.clearSelection();
        
        
    }
    public boolean isInteger(String number) // Function for checking if the string is integer returns true if integer else false
    {
        try{
            Integer.parseInt(number);
            return true;
            
        }
        catch(Exception e)
        {
            return false;
            
        }
    }
    
    public void clearPasswordField()
    {
        currentPasswordField.setText("");
        passwordField.setText("");
        passwordConfirmField.setText("");
    }
    
    public void filladmin()
    {
        String query = "select id, fname, lname, mail, address, start_date, branch_id from employee where id = "+ id;
                   
            ResultSet rs = db.getResultOfQuery(query);
            try {
                if(rs.next())
                {
                    admin = new Admin(rs.getString("id"), rs.getString("fname"), rs.getString("lname"),
                            rs.getString("mail"), rs.getString("address"), rs.getDate("start_date"), rs.getString("branch_id"));
                    
                    idlbl.setText("ID : "+admin.getId());
                    namelbl.setText("Name : "+admin.getFname()+" "+admin.getLname());
                    branchlbl.setText("Branch ID : "+admin.getBranch_id());
                    maillbl.setText("Mail Address : "+admin.getMail());
                    addresslbl.setText("Address : "+admin.getAddress());
                    sdatelbl.setText("Starting date : "+admin.getStart_date().toString());
  
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Couldn't get admin information!!");
                }
              
            } catch (SQLException ex) {
                Logger.getLogger(EmployeeLogin.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    public void fillupdate()
    {
        fnameField.setText(admin.getFname());
        lnameField.setText(admin.getLname());
        mailField.setText(admin.getMail());
        addressField.setText(admin.getAddress());
        
    }
    
    public void fillAddId()
    {
        String idquery = "select idcount from myseq where seqname = 'employee'";
        ResultSet rs = db.getResultOfQuery(idquery);
        int id = 0;
        try {

            if(rs.next())
            {
                addEmployeeIDField.setText(rs.getString(1));
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Error Getting ID");
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(AdminMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
        
        
        
    }
    
    public void fillAddBranch()
    {
         String branchquery = "select branch_id from branch";
         ResultSet rs;
        rs = db.getResultOfQuery(branchquery);
        
        addEmployeeBranchlist.removeAllItems();
        try {
            while(rs.next())
            {
                addEmployeeBranchlist.addItem(rs.getString("branch_id"));
                
                
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Exception occured during retrieving branch list");
            Logger.getLogger(AdminMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(AdminMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new AdminMain().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DynamicPanel;
    private javax.swing.JPanel addEmpPanel;
    private javax.swing.JButton addEmpPanelBut;
    private javax.swing.JTextField addEmployeeAddressField;
    private javax.swing.JRadioButton addEmployeeBackRd;
    private javax.swing.JComboBox addEmployeeBranchlist;
    private javax.swing.JButton addEmployeeButton;
    private javax.swing.JTextField addEmployeeFnameField;
    private javax.swing.JRadioButton addEmployeeFrontRd;
    private javax.swing.JTextField addEmployeeIDField;
    private javax.swing.JTextField addEmployeeLnameField;
    private javax.swing.JTextField addEmployeeMailField;
    private javax.swing.JLabel addEmployeeStatusLbl;
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel addresslbl;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JLabel branchlbl;
    private javax.swing.JPasswordField currentPasswordField;
    private javax.swing.ButtonGroup empTypeButtonGroup;
    private javax.swing.JTextField fnameField;
    private javax.swing.JLabel idlbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField lnameField;
    private javax.swing.JTextField mailField;
    private javax.swing.JLabel maillbl;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel namelbl;
    private javax.swing.JPasswordField passwordConfirmField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel sdatelbl;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox searchByCmb;
    private javax.swing.JPanel searchEmpPanel;
    private javax.swing.JButton searchEmpPanelBut;
    private javax.swing.JTextArea searchEmployeeAddressField;
    private javax.swing.JLabel searchEmployeeAddressLbl;
    private javax.swing.JLabel searchEmployeeBranchLbl;
    private javax.swing.JTextField searchEmployeeFnameField;
    private javax.swing.JLabel searchEmployeeFnameLbl;
    private javax.swing.JLabel searchEmployeeIDLbl;
    private javax.swing.JTextField searchEmployeeLnameField;
    private javax.swing.JLabel searchEmployeeLnameLbl;
    private javax.swing.JTextField searchEmployeeMailField;
    private javax.swing.JLabel searchEmployeeMailLbl;
    private javax.swing.JComboBox searchEmployeeType;
    private javax.swing.JLabel searchEmployeeTypeLbl;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchResultCount;
    private javax.swing.JLabel statlbl;
    private javax.swing.JButton updateButton;
    private javax.swing.JPanel updatePanel;
    private javax.swing.JButton updatePanelBut;
    private javax.swing.JButton updatePasswordButton;
    // End of variables declaration//GEN-END:variables
}
